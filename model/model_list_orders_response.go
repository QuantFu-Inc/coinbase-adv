/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// ListOrdersResponse struct for ListOrdersResponse
type ListOrdersResponse struct {
	Orders []Order `json:"orders,omitempty"`
	Sequence *int32 `json:"sequence,omitempty,string"`
	HasNext *bool `json:"has_next,omitempty"`
	Cursor *string `json:"cursor,omitempty"`
}

// NewListOrdersResponse instantiates a new ListOrdersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOrdersResponse() *ListOrdersResponse {
	this := ListOrdersResponse{}
	return &this
}

// NewListOrdersResponseWithDefaults instantiates a new ListOrdersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOrdersResponseWithDefaults() *ListOrdersResponse {
	this := ListOrdersResponse{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *ListOrdersResponse) GetOrders() []Order {
	if o == nil || isNil(o.Orders) {
		var ret []Order
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrdersResponse) GetOrdersOk() ([]Order, bool) {
	if o == nil || isNil(o.Orders) {
    return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *ListOrdersResponse) HasOrders() bool {
	if o != nil && !isNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []Order and assigns it to the Orders field.
func (o *ListOrdersResponse) SetOrders(v []Order) {
	o.Orders = v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *ListOrdersResponse) GetSequence() int32 {
	if o == nil || isNil(o.Sequence) {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrdersResponse) GetSequenceOk() (*int32, bool) {
	if o == nil || isNil(o.Sequence) {
    return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *ListOrdersResponse) HasSequence() bool {
	if o != nil && !isNil(o.Sequence) {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *ListOrdersResponse) SetSequence(v int32) {
	o.Sequence = &v
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *ListOrdersResponse) GetHasNext() bool {
	if o == nil || isNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrdersResponse) GetHasNextOk() (*bool, bool) {
	if o == nil || isNil(o.HasNext) {
    return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *ListOrdersResponse) HasHasNext() bool {
	if o != nil && !isNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *ListOrdersResponse) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *ListOrdersResponse) GetCursor() string {
	if o == nil || isNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOrdersResponse) GetCursorOk() (*string, bool) {
	if o == nil || isNil(o.Cursor) {
    return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *ListOrdersResponse) HasCursor() bool {
	if o != nil && !isNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *ListOrdersResponse) SetCursor(v string) {
	o.Cursor = &v
}

func (o ListOrdersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !isNil(o.Sequence) {
		toSerialize["sequence"] = o.Sequence
	}
	if !isNil(o.HasNext) {
		toSerialize["has_next"] = o.HasNext
	}
	if !isNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	return json.Marshal(toSerialize)
}

type NullableListOrdersResponse struct {
	value *ListOrdersResponse
	isSet bool
}

func (v NullableListOrdersResponse) Get() *ListOrdersResponse {
	return v.value
}

func (v *NullableListOrdersResponse) Set(val *ListOrdersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListOrdersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListOrdersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOrdersResponse(val *ListOrdersResponse) *NullableListOrdersResponse {
	return &NullableListOrdersResponse{value: val, isSet: true}
}

func (v NullableListOrdersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOrdersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


