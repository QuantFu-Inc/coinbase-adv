/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// OrderOrderConfiguration struct for OrderOrderConfiguration
type OrderOrderConfiguration struct {
	MarketMarketIoc *OrderOrderConfigurationMarketMarketIoc `json:"market_market_ioc,omitempty"`
}

// NewOrderOrderConfiguration instantiates a new OrderOrderConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderOrderConfiguration() *OrderOrderConfiguration {
	this := OrderOrderConfiguration{}
	return &this
}

// NewOrderOrderConfigurationWithDefaults instantiates a new OrderOrderConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderOrderConfigurationWithDefaults() *OrderOrderConfiguration {
	this := OrderOrderConfiguration{}
	return &this
}

// GetMarketMarketIoc returns the MarketMarketIoc field value if set, zero value otherwise.
func (o *OrderOrderConfiguration) GetMarketMarketIoc() OrderOrderConfigurationMarketMarketIoc {
	if o == nil || isNil(o.MarketMarketIoc) {
		var ret OrderOrderConfigurationMarketMarketIoc
		return ret
	}
	return *o.MarketMarketIoc
}

// GetMarketMarketIocOk returns a tuple with the MarketMarketIoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderOrderConfiguration) GetMarketMarketIocOk() (*OrderOrderConfigurationMarketMarketIoc, bool) {
	if o == nil || isNil(o.MarketMarketIoc) {
    return nil, false
	}
	return o.MarketMarketIoc, true
}

// HasMarketMarketIoc returns a boolean if a field has been set.
func (o *OrderOrderConfiguration) HasMarketMarketIoc() bool {
	if o != nil && !isNil(o.MarketMarketIoc) {
		return true
	}

	return false
}

// SetMarketMarketIoc gets a reference to the given OrderOrderConfigurationMarketMarketIoc and assigns it to the MarketMarketIoc field.
func (o *OrderOrderConfiguration) SetMarketMarketIoc(v OrderOrderConfigurationMarketMarketIoc) {
	o.MarketMarketIoc = &v
}

func (o OrderOrderConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MarketMarketIoc) {
		toSerialize["market_market_ioc"] = o.MarketMarketIoc
	}
	return json.Marshal(toSerialize)
}

type NullableOrderOrderConfiguration struct {
	value *OrderOrderConfiguration
	isSet bool
}

func (v NullableOrderOrderConfiguration) Get() *OrderOrderConfiguration {
	return v.value
}

func (v *NullableOrderOrderConfiguration) Set(val *OrderOrderConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderOrderConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderOrderConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderOrderConfiguration(val *OrderOrderConfiguration) *NullableOrderOrderConfiguration {
	return &NullableOrderOrderConfiguration{value: val, isSet: true}
}

func (v NullableOrderOrderConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderOrderConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


