/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// CreateOrderResponseSuccessResponse struct for CreateOrderResponseSuccessResponse
type CreateOrderResponseSuccessResponse struct {
	OrderId *string `json:"order_id,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	Side *string `json:"side,omitempty"`
	ClientOrderId *string `json:"client_order_id,omitempty"`
}

// NewCreateOrderResponseSuccessResponse instantiates a new CreateOrderResponseSuccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderResponseSuccessResponse() *CreateOrderResponseSuccessResponse {
	this := CreateOrderResponseSuccessResponse{}
	return &this
}

// NewCreateOrderResponseSuccessResponseWithDefaults instantiates a new CreateOrderResponseSuccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderResponseSuccessResponseWithDefaults() *CreateOrderResponseSuccessResponse {
	this := CreateOrderResponseSuccessResponse{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CreateOrderResponseSuccessResponse) GetOrderId() string {
	if o == nil || isNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseSuccessResponse) GetOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.OrderId) {
    return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CreateOrderResponseSuccessResponse) HasOrderId() bool {
	if o != nil && !isNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *CreateOrderResponseSuccessResponse) SetOrderId(v string) {
	o.OrderId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *CreateOrderResponseSuccessResponse) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseSuccessResponse) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *CreateOrderResponseSuccessResponse) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *CreateOrderResponseSuccessResponse) SetProductId(v string) {
	o.ProductId = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *CreateOrderResponseSuccessResponse) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseSuccessResponse) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *CreateOrderResponseSuccessResponse) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *CreateOrderResponseSuccessResponse) SetSide(v string) {
	o.Side = &v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *CreateOrderResponseSuccessResponse) GetClientOrderId() string {
	if o == nil || isNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseSuccessResponse) GetClientOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientOrderId) {
    return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *CreateOrderResponseSuccessResponse) HasClientOrderId() bool {
	if o != nil && !isNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *CreateOrderResponseSuccessResponse) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

func (o CreateOrderResponseSuccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !isNil(o.ClientOrderId) {
		toSerialize["client_order_id"] = o.ClientOrderId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrderResponseSuccessResponse struct {
	value *CreateOrderResponseSuccessResponse
	isSet bool
}

func (v NullableCreateOrderResponseSuccessResponse) Get() *CreateOrderResponseSuccessResponse {
	return v.value
}

func (v *NullableCreateOrderResponseSuccessResponse) Set(val *CreateOrderResponseSuccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderResponseSuccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderResponseSuccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderResponseSuccessResponse(val *CreateOrderResponseSuccessResponse) *NullableCreateOrderResponseSuccessResponse {
	return &NullableCreateOrderResponseSuccessResponse{value: val, isSet: true}
}

func (v NullableCreateOrderResponseSuccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderResponseSuccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


