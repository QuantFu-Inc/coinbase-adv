/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// ListFillsResponse struct for ListFillsResponse
type ListFillsResponse struct {
	Fills []OrderFill `json:"fills,omitempty"`
	Cursor *string `json:"cursor,omitempty"`
}

// NewListFillsResponse instantiates a new ListFillsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFillsResponse() *ListFillsResponse {
	this := ListFillsResponse{}
	return &this
}

// NewListFillsResponseWithDefaults instantiates a new ListFillsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFillsResponseWithDefaults() *ListFillsResponse {
	this := ListFillsResponse{}
	return &this
}

// GetFills returns the Fills field value if set, zero value otherwise.
func (o *ListFillsResponse) GetFills() []OrderFill {
	if o == nil || isNil(o.Fills) {
		var ret []OrderFill
		return ret
	}
	return o.Fills
}

// GetFillsOk returns a tuple with the Fills field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFillsResponse) GetFillsOk() ([]OrderFill, bool) {
	if o == nil || isNil(o.Fills) {
    return nil, false
	}
	return o.Fills, true
}

// HasFills returns a boolean if a field has been set.
func (o *ListFillsResponse) HasFills() bool {
	if o != nil && !isNil(o.Fills) {
		return true
	}

	return false
}

// SetFills gets a reference to the given []OrderFill and assigns it to the Fills field.
func (o *ListFillsResponse) SetFills(v []OrderFill) {
	o.Fills = v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *ListFillsResponse) GetCursor() string {
	if o == nil || isNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFillsResponse) GetCursorOk() (*string, bool) {
	if o == nil || isNil(o.Cursor) {
    return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *ListFillsResponse) HasCursor() bool {
	if o != nil && !isNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *ListFillsResponse) SetCursor(v string) {
	o.Cursor = &v
}

func (o ListFillsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Fills) {
		toSerialize["fills"] = o.Fills
	}
	if !isNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	return json.Marshal(toSerialize)
}

type NullableListFillsResponse struct {
	value *ListFillsResponse
	isSet bool
}

func (v NullableListFillsResponse) Get() *ListFillsResponse {
	return v.value
}

func (v *NullableListFillsResponse) Set(val *ListFillsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListFillsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListFillsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFillsResponse(val *ListFillsResponse) *NullableListFillsResponse {
	return &NullableListFillsResponse{value: val, isSet: true}
}

func (v NullableListFillsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFillsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


