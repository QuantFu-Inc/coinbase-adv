/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// CreateOrderResponseErrorResponse struct for CreateOrderResponseErrorResponse
type CreateOrderResponseErrorResponse struct {
	Error *string `json:"error,omitempty"`
	Message *string `json:"message,omitempty"`
	ErrorDetails *string `json:"error_details,omitempty"`
	PreviewFailureReason *string `json:"preview_failure_reason,omitempty"`
	NewOrderFailureReason *string `json:"new_order_failure_reason,omitempty"`
}

// NewCreateOrderResponseErrorResponse instantiates a new CreateOrderResponseErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderResponseErrorResponse() *CreateOrderResponseErrorResponse {
	this := CreateOrderResponseErrorResponse{}
	return &this
}

// NewCreateOrderResponseErrorResponseWithDefaults instantiates a new CreateOrderResponseErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderResponseErrorResponseWithDefaults() *CreateOrderResponseErrorResponse {
	this := CreateOrderResponseErrorResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CreateOrderResponseErrorResponse) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseErrorResponse) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CreateOrderResponseErrorResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *CreateOrderResponseErrorResponse) SetError(v string) {
	o.Error = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateOrderResponseErrorResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateOrderResponseErrorResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateOrderResponseErrorResponse) SetMessage(v string) {
	o.Message = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *CreateOrderResponseErrorResponse) GetErrorDetails() string {
	if o == nil || isNil(o.ErrorDetails) {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseErrorResponse) GetErrorDetailsOk() (*string, bool) {
	if o == nil || isNil(o.ErrorDetails) {
    return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *CreateOrderResponseErrorResponse) HasErrorDetails() bool {
	if o != nil && !isNil(o.ErrorDetails) {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *CreateOrderResponseErrorResponse) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

// GetPreviewFailureReason returns the PreviewFailureReason field value if set, zero value otherwise.
func (o *CreateOrderResponseErrorResponse) GetPreviewFailureReason() string {
	if o == nil || isNil(o.PreviewFailureReason) {
		var ret string
		return ret
	}
	return *o.PreviewFailureReason
}

// GetPreviewFailureReasonOk returns a tuple with the PreviewFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseErrorResponse) GetPreviewFailureReasonOk() (*string, bool) {
	if o == nil || isNil(o.PreviewFailureReason) {
    return nil, false
	}
	return o.PreviewFailureReason, true
}

// HasPreviewFailureReason returns a boolean if a field has been set.
func (o *CreateOrderResponseErrorResponse) HasPreviewFailureReason() bool {
	if o != nil && !isNil(o.PreviewFailureReason) {
		return true
	}

	return false
}

// SetPreviewFailureReason gets a reference to the given string and assigns it to the PreviewFailureReason field.
func (o *CreateOrderResponseErrorResponse) SetPreviewFailureReason(v string) {
	o.PreviewFailureReason = &v
}

// GetNewOrderFailureReason returns the NewOrderFailureReason field value if set, zero value otherwise.
func (o *CreateOrderResponseErrorResponse) GetNewOrderFailureReason() string {
	if o == nil || isNil(o.NewOrderFailureReason) {
		var ret string
		return ret
	}
	return *o.NewOrderFailureReason
}

// GetNewOrderFailureReasonOk returns a tuple with the NewOrderFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderResponseErrorResponse) GetNewOrderFailureReasonOk() (*string, bool) {
	if o == nil || isNil(o.NewOrderFailureReason) {
    return nil, false
	}
	return o.NewOrderFailureReason, true
}

// HasNewOrderFailureReason returns a boolean if a field has been set.
func (o *CreateOrderResponseErrorResponse) HasNewOrderFailureReason() bool {
	if o != nil && !isNil(o.NewOrderFailureReason) {
		return true
	}

	return false
}

// SetNewOrderFailureReason gets a reference to the given string and assigns it to the NewOrderFailureReason field.
func (o *CreateOrderResponseErrorResponse) SetNewOrderFailureReason(v string) {
	o.NewOrderFailureReason = &v
}

func (o CreateOrderResponseErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.ErrorDetails) {
		toSerialize["error_details"] = o.ErrorDetails
	}
	if !isNil(o.PreviewFailureReason) {
		toSerialize["preview_failure_reason"] = o.PreviewFailureReason
	}
	if !isNil(o.NewOrderFailureReason) {
		toSerialize["new_order_failure_reason"] = o.NewOrderFailureReason
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrderResponseErrorResponse struct {
	value *CreateOrderResponseErrorResponse
	isSet bool
}

func (v NullableCreateOrderResponseErrorResponse) Get() *CreateOrderResponseErrorResponse {
	return v.value
}

func (v *NullableCreateOrderResponseErrorResponse) Set(val *CreateOrderResponseErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderResponseErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderResponseErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderResponseErrorResponse(val *CreateOrderResponseErrorResponse) *NullableCreateOrderResponseErrorResponse {
	return &NullableCreateOrderResponseErrorResponse{value: val, isSet: true}
}

func (v NullableCreateOrderResponseErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderResponseErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


