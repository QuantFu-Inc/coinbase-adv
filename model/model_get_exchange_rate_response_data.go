/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// GetExchangeRateResponseData struct for GetExchangeRateResponseData
type GetExchangeRateResponseData struct {
	Currency *string `json:"currency,omitempty"`
	Rates *map[string]string `json:"rates,omitempty"`
}

// NewGetExchangeRateResponseData instantiates a new GetExchangeRateResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetExchangeRateResponseData() *GetExchangeRateResponseData {
	this := GetExchangeRateResponseData{}
	return &this
}

// NewGetExchangeRateResponseDataWithDefaults instantiates a new GetExchangeRateResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetExchangeRateResponseDataWithDefaults() *GetExchangeRateResponseData {
	this := GetExchangeRateResponseData{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *GetExchangeRateResponseData) GetCurrency() string {
	if o == nil || isNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetExchangeRateResponseData) GetCurrencyOk() (*string, bool) {
	if o == nil || isNil(o.Currency) {
    return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *GetExchangeRateResponseData) HasCurrency() bool {
	if o != nil && !isNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *GetExchangeRateResponseData) SetCurrency(v string) {
	o.Currency = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *GetExchangeRateResponseData) GetRates() map[string]string {
	if o == nil || isNil(o.Rates) {
		var ret map[string]string
		return ret
	}
	return *o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetExchangeRateResponseData) GetRatesOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Rates) {
    return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *GetExchangeRateResponseData) HasRates() bool {
	if o != nil && !isNil(o.Rates) {
		return true
	}

	return false
}

// SetRates gets a reference to the given map[string]string and assigns it to the Rates field.
func (o *GetExchangeRateResponseData) SetRates(v map[string]string) {
	o.Rates = &v
}

func (o GetExchangeRateResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !isNil(o.Rates) {
		toSerialize["rates"] = o.Rates
	}
	return json.Marshal(toSerialize)
}

type NullableGetExchangeRateResponseData struct {
	value *GetExchangeRateResponseData
	isSet bool
}

func (v NullableGetExchangeRateResponseData) Get() *GetExchangeRateResponseData {
	return v.value
}

func (v *NullableGetExchangeRateResponseData) Set(val *GetExchangeRateResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetExchangeRateResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetExchangeRateResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetExchangeRateResponseData(val *GetExchangeRateResponseData) *NullableGetExchangeRateResponseData {
	return &NullableGetExchangeRateResponseData{value: val, isSet: true}
}

func (v NullableGetExchangeRateResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetExchangeRateResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


