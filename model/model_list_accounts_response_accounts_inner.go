/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// ListAccountsResponseAccountsInner struct for ListAccountsResponseAccountsInner
type ListAccountsResponseAccountsInner struct {
	Uuid *string `json:"uuid,omitempty"`
	Name *string `json:"name,omitempty"`
	Currency *string `json:"currency,omitempty"`
	AvailableBalance *ListAccountsResponseAccountsInnerAvailableBalance `json:"available_balance,omitempty"`
	Default *bool `json:"default,omitempty"`
	Active *bool `json:"active,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	DeletedAt *string `json:"deleted_at,omitempty"`
	Type *string `json:"type,omitempty"`
	Ready *bool `json:"ready,omitempty"`
	Hold *ListAccountsResponseAccountsInnerAvailableBalance `json:"hold,omitempty"`
}

// NewListAccountsResponseAccountsInner instantiates a new ListAccountsResponseAccountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAccountsResponseAccountsInner() *ListAccountsResponseAccountsInner {
	this := ListAccountsResponseAccountsInner{}
	return &this
}

// NewListAccountsResponseAccountsInnerWithDefaults instantiates a new ListAccountsResponseAccountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAccountsResponseAccountsInnerWithDefaults() *ListAccountsResponseAccountsInner {
	this := ListAccountsResponseAccountsInner{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetUuid() string {
	if o == nil || isNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetUuidOk() (*string, bool) {
	if o == nil || isNil(o.Uuid) {
    return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasUuid() bool {
	if o != nil && !isNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ListAccountsResponseAccountsInner) SetUuid(v string) {
	o.Uuid = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ListAccountsResponseAccountsInner) SetName(v string) {
	o.Name = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetCurrency() string {
	if o == nil || isNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetCurrencyOk() (*string, bool) {
	if o == nil || isNil(o.Currency) {
    return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasCurrency() bool {
	if o != nil && !isNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ListAccountsResponseAccountsInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetAvailableBalance returns the AvailableBalance field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetAvailableBalance() ListAccountsResponseAccountsInnerAvailableBalance {
	if o == nil || isNil(o.AvailableBalance) {
		var ret ListAccountsResponseAccountsInnerAvailableBalance
		return ret
	}
	return *o.AvailableBalance
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetAvailableBalanceOk() (*ListAccountsResponseAccountsInnerAvailableBalance, bool) {
	if o == nil || isNil(o.AvailableBalance) {
    return nil, false
	}
	return o.AvailableBalance, true
}

// HasAvailableBalance returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasAvailableBalance() bool {
	if o != nil && !isNil(o.AvailableBalance) {
		return true
	}

	return false
}

// SetAvailableBalance gets a reference to the given ListAccountsResponseAccountsInnerAvailableBalance and assigns it to the AvailableBalance field.
func (o *ListAccountsResponseAccountsInner) SetAvailableBalance(v ListAccountsResponseAccountsInnerAvailableBalance) {
	o.AvailableBalance = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
    return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *ListAccountsResponseAccountsInner) SetDefault(v bool) {
	o.Default = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
    return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ListAccountsResponseAccountsInner) SetActive(v bool) {
	o.Active = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ListAccountsResponseAccountsInner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ListAccountsResponseAccountsInner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetDeletedAt() string {
	if o == nil || isNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetDeletedAtOk() (*string, bool) {
	if o == nil || isNil(o.DeletedAt) {
    return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasDeletedAt() bool {
	if o != nil && !isNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *ListAccountsResponseAccountsInner) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListAccountsResponseAccountsInner) SetType(v string) {
	o.Type = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetReady() bool {
	if o == nil || isNil(o.Ready) {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetReadyOk() (*bool, bool) {
	if o == nil || isNil(o.Ready) {
    return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasReady() bool {
	if o != nil && !isNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *ListAccountsResponseAccountsInner) SetReady(v bool) {
	o.Ready = &v
}

// GetHold returns the Hold field value if set, zero value otherwise.
func (o *ListAccountsResponseAccountsInner) GetHold() ListAccountsResponseAccountsInnerAvailableBalance {
	if o == nil || isNil(o.Hold) {
		var ret ListAccountsResponseAccountsInnerAvailableBalance
		return ret
	}
	return *o.Hold
}

// GetHoldOk returns a tuple with the Hold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAccountsResponseAccountsInner) GetHoldOk() (*ListAccountsResponseAccountsInnerAvailableBalance, bool) {
	if o == nil || isNil(o.Hold) {
    return nil, false
	}
	return o.Hold, true
}

// HasHold returns a boolean if a field has been set.
func (o *ListAccountsResponseAccountsInner) HasHold() bool {
	if o != nil && !isNil(o.Hold) {
		return true
	}

	return false
}

// SetHold gets a reference to the given ListAccountsResponseAccountsInnerAvailableBalance and assigns it to the Hold field.
func (o *ListAccountsResponseAccountsInner) SetHold(v ListAccountsResponseAccountsInnerAvailableBalance) {
	o.Hold = &v
}

func (o ListAccountsResponseAccountsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !isNil(o.AvailableBalance) {
		toSerialize["available_balance"] = o.AvailableBalance
	}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.DeletedAt) {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !isNil(o.Hold) {
		toSerialize["hold"] = o.Hold
	}
	return json.Marshal(toSerialize)
}

type NullableListAccountsResponseAccountsInner struct {
	value *ListAccountsResponseAccountsInner
	isSet bool
}

func (v NullableListAccountsResponseAccountsInner) Get() *ListAccountsResponseAccountsInner {
	return v.value
}

func (v *NullableListAccountsResponseAccountsInner) Set(val *ListAccountsResponseAccountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListAccountsResponseAccountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListAccountsResponseAccountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAccountsResponseAccountsInner(val *ListAccountsResponseAccountsInner) *NullableListAccountsResponseAccountsInner {
	return &NullableListAccountsResponseAccountsInner{value: val, isSet: true}
}

func (v NullableListAccountsResponseAccountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAccountsResponseAccountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


