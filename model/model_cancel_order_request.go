/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// CancelOrderRequest struct for CancelOrderRequest
type CancelOrderRequest struct {
	OrderIds []string `json:"order_ids,omitempty"`
}

// NewCancelOrderRequest instantiates a new CancelOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelOrderRequest() *CancelOrderRequest {
	this := CancelOrderRequest{}
	return &this
}

// NewCancelOrderRequestWithDefaults instantiates a new CancelOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelOrderRequestWithDefaults() *CancelOrderRequest {
	this := CancelOrderRequest{}
	return &this
}

// GetOrderIds returns the OrderIds field value if set, zero value otherwise.
func (o *CancelOrderRequest) GetOrderIds() []string {
	if o == nil || isNil(o.OrderIds) {
		var ret []string
		return ret
	}
	return o.OrderIds
}

// GetOrderIdsOk returns a tuple with the OrderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelOrderRequest) GetOrderIdsOk() ([]string, bool) {
	if o == nil || isNil(o.OrderIds) {
    return nil, false
	}
	return o.OrderIds, true
}

// HasOrderIds returns a boolean if a field has been set.
func (o *CancelOrderRequest) HasOrderIds() bool {
	if o != nil && !isNil(o.OrderIds) {
		return true
	}

	return false
}

// SetOrderIds gets a reference to the given []string and assigns it to the OrderIds field.
func (o *CancelOrderRequest) SetOrderIds(v []string) {
	o.OrderIds = v
}

func (o CancelOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrderIds) {
		toSerialize["order_ids"] = o.OrderIds
	}
	return json.Marshal(toSerialize)
}

type NullableCancelOrderRequest struct {
	value *CancelOrderRequest
	isSet bool
}

func (v NullableCancelOrderRequest) Get() *CancelOrderRequest {
	return v.value
}

func (v *NullableCancelOrderRequest) Set(val *CancelOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelOrderRequest(val *CancelOrderRequest) *NullableCancelOrderRequest {
	return &NullableCancelOrderRequest{value: val, isSet: true}
}

func (v NullableCancelOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


