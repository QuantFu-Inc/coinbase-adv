/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// OrderLimitLimitGtc struct for OrderLimitLimitGtc
type OrderLimitLimitGtc struct {
	BaseSize *float64 `json:"base_size,omitempty,string"`
	LimitPrice *float64 `json:"limit_price,omitempty,string"`
	PostOnly *bool `json:"post_only,omitempty"`
}

// NewOrderLimitLimitGtc instantiates a new OrderLimitLimitGtc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderLimitLimitGtc() *OrderLimitLimitGtc {
	this := OrderLimitLimitGtc{}
	return &this
}

// NewOrderLimitLimitGtcWithDefaults instantiates a new OrderLimitLimitGtc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderLimitLimitGtcWithDefaults() *OrderLimitLimitGtc {
	this := OrderLimitLimitGtc{}
	return &this
}

// GetBaseSize returns the BaseSize field value if set, zero value otherwise.
func (o *OrderLimitLimitGtc) GetBaseSize() float64 {
	if o == nil || isNil(o.BaseSize) {
		var ret float64
		return ret
	}
	return *o.BaseSize
}

// GetBaseSizeOk returns a tuple with the BaseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLimitLimitGtc) GetBaseSizeOk() (*float64, bool) {
	if o == nil || isNil(o.BaseSize) {
    return nil, false
	}
	return o.BaseSize, true
}

// HasBaseSize returns a boolean if a field has been set.
func (o *OrderLimitLimitGtc) HasBaseSize() bool {
	if o != nil && !isNil(o.BaseSize) {
		return true
	}

	return false
}

// SetBaseSize gets a reference to the given float64 and assigns it to the BaseSize field.
func (o *OrderLimitLimitGtc) SetBaseSize(v float64) {
	o.BaseSize = &v
}

// GetLimitPrice returns the LimitPrice field value if set, zero value otherwise.
func (o *OrderLimitLimitGtc) GetLimitPrice() float64 {
	if o == nil || isNil(o.LimitPrice) {
		var ret float64
		return ret
	}
	return *o.LimitPrice
}

// GetLimitPriceOk returns a tuple with the LimitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLimitLimitGtc) GetLimitPriceOk() (*float64, bool) {
	if o == nil || isNil(o.LimitPrice) {
    return nil, false
	}
	return o.LimitPrice, true
}

// HasLimitPrice returns a boolean if a field has been set.
func (o *OrderLimitLimitGtc) HasLimitPrice() bool {
	if o != nil && !isNil(o.LimitPrice) {
		return true
	}

	return false
}

// SetLimitPrice gets a reference to the given float64 and assigns it to the LimitPrice field.
func (o *OrderLimitLimitGtc) SetLimitPrice(v float64) {
	o.LimitPrice = &v
}

// GetPostOnly returns the PostOnly field value if set, zero value otherwise.
func (o *OrderLimitLimitGtc) GetPostOnly() bool {
	if o == nil || isNil(o.PostOnly) {
		var ret bool
		return ret
	}
	return *o.PostOnly
}

// GetPostOnlyOk returns a tuple with the PostOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderLimitLimitGtc) GetPostOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.PostOnly) {
    return nil, false
	}
	return o.PostOnly, true
}

// HasPostOnly returns a boolean if a field has been set.
func (o *OrderLimitLimitGtc) HasPostOnly() bool {
	if o != nil && !isNil(o.PostOnly) {
		return true
	}

	return false
}

// SetPostOnly gets a reference to the given bool and assigns it to the PostOnly field.
func (o *OrderLimitLimitGtc) SetPostOnly(v bool) {
	o.PostOnly = &v
}

func (o OrderLimitLimitGtc) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BaseSize) {
		toSerialize["base_size"] = o.BaseSize
	}
	if !isNil(o.LimitPrice) {
		toSerialize["limit_price"] = o.LimitPrice
	}
	if !isNil(o.PostOnly) {
		toSerialize["post_only"] = o.PostOnly
	}
	return json.Marshal(toSerialize)
}

type NullableOrderLimitLimitGtc struct {
	value *OrderLimitLimitGtc
	isSet bool
}

func (v NullableOrderLimitLimitGtc) Get() *OrderLimitLimitGtc {
	return v.value
}

func (v *NullableOrderLimitLimitGtc) Set(val *OrderLimitLimitGtc) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderLimitLimitGtc) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderLimitLimitGtc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderLimitLimitGtc(val *OrderLimitLimitGtc) *NullableOrderLimitLimitGtc {
	return &NullableOrderLimitLimitGtc{value: val, isSet: true}
}

func (v NullableOrderLimitLimitGtc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderLimitLimitGtc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


