/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// Order struct for Order
type Order struct {
	OrderId *string `json:"order_id,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	OrderConfiguration *OrderOrderConfiguration `json:"order_configuration,omitempty"`
	LimitLimitGtc *OrderLimitLimitGtc `json:"limit_limit_gtc,omitempty"`
	LimitLimitGtd *OrderLimitLimitGtd `json:"limit_limit_gtd,omitempty"`
	StopLimitStopLimitGtc *OrderStopLimitStopLimitGtc `json:"stop_limit_stop_limit_gtc,omitempty"`
	StopLimitStopLimitGtd *OrderStopLimitStopLimitGtd `json:"stop_limit_stop_limit_gtd,omitempty"`
	Side *string `json:"side,omitempty"`
	ClientOrderId *string `json:"client_order_id,omitempty"`
	Status *OrderStatus `json:"status,omitempty"`
	TimeInForce *string `json:"time_in_force,omitempty"`
	CreatedTime *string `json:"created_time,omitempty"`
	CompletionPercentage *float64 `json:"completion_percentage,omitempty,string"`
	FilledSize *float64 `json:"filled_size,omitempty,string"`
	AverageFilledPrice *float64 `json:"average_filled_price,omitempty,string"`
	Fee *string `json:"fee,omitempty"`
	NumberOfFills *float64 `json:"number_of_fills,omitempty,string"`
	FilledValue *float64 `json:"filled_value,omitempty,string"`
	PendingCancel *bool `json:"pending_cancel,omitempty"`
	SizeInQuote *bool `json:"size_in_quote,omitempty"`
	TotalFees *float64 `json:"total_fees,omitempty,string"`
	SizeInclusiveOfFees *bool `json:"size_inclusive_of_fees,omitempty"`
	TotalValueAfterFees *float64 `json:"total_value_after_fees,omitempty,string"`
	TriggerStatus *string `json:"trigger_status,omitempty"`
	OrderType *string `json:"order_type,omitempty"`
	RejectReason *string `json:"reject_reason,omitempty"`
	Settled *bool `json:"settled,omitempty"`
	ProductType *string `json:"product_type,omitempty"`
	RejectMessage *string `json:"reject_message,omitempty"`
	CancelMessage *string `json:"cancel_message,omitempty"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder() *Order {
	this := Order{}
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Order) GetOrderId() string {
	if o == nil || isNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.OrderId) {
    return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Order) HasOrderId() bool {
	if o != nil && !isNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *Order) SetOrderId(v string) {
	o.OrderId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Order) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Order) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Order) SetProductId(v string) {
	o.ProductId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Order) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Order) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Order) SetUserId(v string) {
	o.UserId = &v
}

// GetOrderConfiguration returns the OrderConfiguration field value if set, zero value otherwise.
func (o *Order) GetOrderConfiguration() OrderOrderConfiguration {
	if o == nil || isNil(o.OrderConfiguration) {
		var ret OrderOrderConfiguration
		return ret
	}
	return *o.OrderConfiguration
}

// GetOrderConfigurationOk returns a tuple with the OrderConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderConfigurationOk() (*OrderOrderConfiguration, bool) {
	if o == nil || isNil(o.OrderConfiguration) {
    return nil, false
	}
	return o.OrderConfiguration, true
}

// HasOrderConfiguration returns a boolean if a field has been set.
func (o *Order) HasOrderConfiguration() bool {
	if o != nil && !isNil(o.OrderConfiguration) {
		return true
	}

	return false
}

// SetOrderConfiguration gets a reference to the given OrderOrderConfiguration and assigns it to the OrderConfiguration field.
func (o *Order) SetOrderConfiguration(v OrderOrderConfiguration) {
	o.OrderConfiguration = &v
}

// GetLimitLimitGtc returns the LimitLimitGtc field value if set, zero value otherwise.
func (o *Order) GetLimitLimitGtc() OrderLimitLimitGtc {
	if o == nil || isNil(o.LimitLimitGtc) {
		var ret OrderLimitLimitGtc
		return ret
	}
	return *o.LimitLimitGtc
}

// GetLimitLimitGtcOk returns a tuple with the LimitLimitGtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLimitLimitGtcOk() (*OrderLimitLimitGtc, bool) {
	if o == nil || isNil(o.LimitLimitGtc) {
    return nil, false
	}
	return o.LimitLimitGtc, true
}

// HasLimitLimitGtc returns a boolean if a field has been set.
func (o *Order) HasLimitLimitGtc() bool {
	if o != nil && !isNil(o.LimitLimitGtc) {
		return true
	}

	return false
}

// SetLimitLimitGtc gets a reference to the given OrderLimitLimitGtc and assigns it to the LimitLimitGtc field.
func (o *Order) SetLimitLimitGtc(v OrderLimitLimitGtc) {
	o.LimitLimitGtc = &v
}

// GetLimitLimitGtd returns the LimitLimitGtd field value if set, zero value otherwise.
func (o *Order) GetLimitLimitGtd() OrderLimitLimitGtd {
	if o == nil || isNil(o.LimitLimitGtd) {
		var ret OrderLimitLimitGtd
		return ret
	}
	return *o.LimitLimitGtd
}

// GetLimitLimitGtdOk returns a tuple with the LimitLimitGtd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetLimitLimitGtdOk() (*OrderLimitLimitGtd, bool) {
	if o == nil || isNil(o.LimitLimitGtd) {
    return nil, false
	}
	return o.LimitLimitGtd, true
}

// HasLimitLimitGtd returns a boolean if a field has been set.
func (o *Order) HasLimitLimitGtd() bool {
	if o != nil && !isNil(o.LimitLimitGtd) {
		return true
	}

	return false
}

// SetLimitLimitGtd gets a reference to the given OrderLimitLimitGtd and assigns it to the LimitLimitGtd field.
func (o *Order) SetLimitLimitGtd(v OrderLimitLimitGtd) {
	o.LimitLimitGtd = &v
}

// GetStopLimitStopLimitGtc returns the StopLimitStopLimitGtc field value if set, zero value otherwise.
func (o *Order) GetStopLimitStopLimitGtc() OrderStopLimitStopLimitGtc {
	if o == nil || isNil(o.StopLimitStopLimitGtc) {
		var ret OrderStopLimitStopLimitGtc
		return ret
	}
	return *o.StopLimitStopLimitGtc
}

// GetStopLimitStopLimitGtcOk returns a tuple with the StopLimitStopLimitGtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStopLimitStopLimitGtcOk() (*OrderStopLimitStopLimitGtc, bool) {
	if o == nil || isNil(o.StopLimitStopLimitGtc) {
    return nil, false
	}
	return o.StopLimitStopLimitGtc, true
}

// HasStopLimitStopLimitGtc returns a boolean if a field has been set.
func (o *Order) HasStopLimitStopLimitGtc() bool {
	if o != nil && !isNil(o.StopLimitStopLimitGtc) {
		return true
	}

	return false
}

// SetStopLimitStopLimitGtc gets a reference to the given OrderStopLimitStopLimitGtc and assigns it to the StopLimitStopLimitGtc field.
func (o *Order) SetStopLimitStopLimitGtc(v OrderStopLimitStopLimitGtc) {
	o.StopLimitStopLimitGtc = &v
}

// GetStopLimitStopLimitGtd returns the StopLimitStopLimitGtd field value if set, zero value otherwise.
func (o *Order) GetStopLimitStopLimitGtd() OrderStopLimitStopLimitGtd {
	if o == nil || isNil(o.StopLimitStopLimitGtd) {
		var ret OrderStopLimitStopLimitGtd
		return ret
	}
	return *o.StopLimitStopLimitGtd
}

// GetStopLimitStopLimitGtdOk returns a tuple with the StopLimitStopLimitGtd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStopLimitStopLimitGtdOk() (*OrderStopLimitStopLimitGtd, bool) {
	if o == nil || isNil(o.StopLimitStopLimitGtd) {
    return nil, false
	}
	return o.StopLimitStopLimitGtd, true
}

// HasStopLimitStopLimitGtd returns a boolean if a field has been set.
func (o *Order) HasStopLimitStopLimitGtd() bool {
	if o != nil && !isNil(o.StopLimitStopLimitGtd) {
		return true
	}

	return false
}

// SetStopLimitStopLimitGtd gets a reference to the given OrderStopLimitStopLimitGtd and assigns it to the StopLimitStopLimitGtd field.
func (o *Order) SetStopLimitStopLimitGtd(v OrderStopLimitStopLimitGtd) {
	o.StopLimitStopLimitGtd = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *Order) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *Order) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *Order) SetSide(v string) {
	o.Side = &v
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *Order) GetClientOrderId() string {
	if o == nil || isNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetClientOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientOrderId) {
    return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *Order) HasClientOrderId() bool {
	if o != nil && !isNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *Order) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Order) GetStatus() OrderStatus {
	if o == nil || isNil(o.Status) {
		var ret OrderStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*OrderStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Order) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrderStatus and assigns it to the Status field.
func (o *Order) SetStatus(v OrderStatus) {
	o.Status = &v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *Order) GetTimeInForce() string {
	if o == nil || isNil(o.TimeInForce) {
		var ret string
		return ret
	}
	return *o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTimeInForceOk() (*string, bool) {
	if o == nil || isNil(o.TimeInForce) {
    return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *Order) HasTimeInForce() bool {
	if o != nil && !isNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given string and assigns it to the TimeInForce field.
func (o *Order) SetTimeInForce(v string) {
	o.TimeInForce = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Order) GetCreatedTime() string {
	if o == nil || isNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCreatedTimeOk() (*string, bool) {
	if o == nil || isNil(o.CreatedTime) {
    return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Order) HasCreatedTime() bool {
	if o != nil && !isNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Order) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetCompletionPercentage returns the CompletionPercentage field value if set, zero value otherwise.
func (o *Order) GetCompletionPercentage() float64 {
	if o == nil || isNil(o.CompletionPercentage) {
		var ret float64
		return ret
	}
	return *o.CompletionPercentage
}

// GetCompletionPercentageOk returns a tuple with the CompletionPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCompletionPercentageOk() (*float64, bool) {
	if o == nil || isNil(o.CompletionPercentage) {
    return nil, false
	}
	return o.CompletionPercentage, true
}

// HasCompletionPercentage returns a boolean if a field has been set.
func (o *Order) HasCompletionPercentage() bool {
	if o != nil && !isNil(o.CompletionPercentage) {
		return true
	}

	return false
}

// SetCompletionPercentage gets a reference to the given float64 and assigns it to the CompletionPercentage field.
func (o *Order) SetCompletionPercentage(v float64) {
	o.CompletionPercentage = &v
}

// GetFilledSize returns the FilledSize field value if set, zero value otherwise.
func (o *Order) GetFilledSize() float64 {
	if o == nil || isNil(o.FilledSize) {
		var ret float64
		return ret
	}
	return *o.FilledSize
}

// GetFilledSizeOk returns a tuple with the FilledSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetFilledSizeOk() (*float64, bool) {
	if o == nil || isNil(o.FilledSize) {
    return nil, false
	}
	return o.FilledSize, true
}

// HasFilledSize returns a boolean if a field has been set.
func (o *Order) HasFilledSize() bool {
	if o != nil && !isNil(o.FilledSize) {
		return true
	}

	return false
}

// SetFilledSize gets a reference to the given float64 and assigns it to the FilledSize field.
func (o *Order) SetFilledSize(v float64) {
	o.FilledSize = &v
}

// GetAverageFilledPrice returns the AverageFilledPrice field value if set, zero value otherwise.
func (o *Order) GetAverageFilledPrice() float64 {
	if o == nil || isNil(o.AverageFilledPrice) {
		var ret float64
		return ret
	}
	return *o.AverageFilledPrice
}

// GetAverageFilledPriceOk returns a tuple with the AverageFilledPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetAverageFilledPriceOk() (*float64, bool) {
	if o == nil || isNil(o.AverageFilledPrice) {
    return nil, false
	}
	return o.AverageFilledPrice, true
}

// HasAverageFilledPrice returns a boolean if a field has been set.
func (o *Order) HasAverageFilledPrice() bool {
	if o != nil && !isNil(o.AverageFilledPrice) {
		return true
	}

	return false
}

// SetAverageFilledPrice gets a reference to the given float64 and assigns it to the AverageFilledPrice field.
func (o *Order) SetAverageFilledPrice(v float64) {
	o.AverageFilledPrice = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *Order) GetFee() string {
	if o == nil || isNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetFeeOk() (*string, bool) {
	if o == nil || isNil(o.Fee) {
    return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *Order) HasFee() bool {
	if o != nil && !isNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *Order) SetFee(v string) {
	o.Fee = &v
}

// GetNumberOfFills returns the NumberOfFills field value if set, zero value otherwise.
func (o *Order) GetNumberOfFills() float64 {
	if o == nil || isNil(o.NumberOfFills) {
		var ret float64
		return ret
	}
	return *o.NumberOfFills
}

// GetNumberOfFillsOk returns a tuple with the NumberOfFills field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetNumberOfFillsOk() (*float64, bool) {
	if o == nil || isNil(o.NumberOfFills) {
    return nil, false
	}
	return o.NumberOfFills, true
}

// HasNumberOfFills returns a boolean if a field has been set.
func (o *Order) HasNumberOfFills() bool {
	if o != nil && !isNil(o.NumberOfFills) {
		return true
	}

	return false
}

// SetNumberOfFills gets a reference to the given float64 and assigns it to the NumberOfFills field.
func (o *Order) SetNumberOfFills(v float64) {
	o.NumberOfFills = &v
}

// GetFilledValue returns the FilledValue field value if set, zero value otherwise.
func (o *Order) GetFilledValue() float64 {
	if o == nil || isNil(o.FilledValue) {
		var ret float64
		return ret
	}
	return *o.FilledValue
}

// GetFilledValueOk returns a tuple with the FilledValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetFilledValueOk() (*float64, bool) {
	if o == nil || isNil(o.FilledValue) {
    return nil, false
	}
	return o.FilledValue, true
}

// HasFilledValue returns a boolean if a field has been set.
func (o *Order) HasFilledValue() bool {
	if o != nil && !isNil(o.FilledValue) {
		return true
	}

	return false
}

// SetFilledValue gets a reference to the given float64 and assigns it to the FilledValue field.
func (o *Order) SetFilledValue(v float64) {
	o.FilledValue = &v
}

// GetPendingCancel returns the PendingCancel field value if set, zero value otherwise.
func (o *Order) GetPendingCancel() bool {
	if o == nil || isNil(o.PendingCancel) {
		var ret bool
		return ret
	}
	return *o.PendingCancel
}

// GetPendingCancelOk returns a tuple with the PendingCancel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetPendingCancelOk() (*bool, bool) {
	if o == nil || isNil(o.PendingCancel) {
    return nil, false
	}
	return o.PendingCancel, true
}

// HasPendingCancel returns a boolean if a field has been set.
func (o *Order) HasPendingCancel() bool {
	if o != nil && !isNil(o.PendingCancel) {
		return true
	}

	return false
}

// SetPendingCancel gets a reference to the given bool and assigns it to the PendingCancel field.
func (o *Order) SetPendingCancel(v bool) {
	o.PendingCancel = &v
}

// GetSizeInQuote returns the SizeInQuote field value if set, zero value otherwise.
func (o *Order) GetSizeInQuote() bool {
	if o == nil || isNil(o.SizeInQuote) {
		var ret bool
		return ret
	}
	return *o.SizeInQuote
}

// GetSizeInQuoteOk returns a tuple with the SizeInQuote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSizeInQuoteOk() (*bool, bool) {
	if o == nil || isNil(o.SizeInQuote) {
    return nil, false
	}
	return o.SizeInQuote, true
}

// HasSizeInQuote returns a boolean if a field has been set.
func (o *Order) HasSizeInQuote() bool {
	if o != nil && !isNil(o.SizeInQuote) {
		return true
	}

	return false
}

// SetSizeInQuote gets a reference to the given bool and assigns it to the SizeInQuote field.
func (o *Order) SetSizeInQuote(v bool) {
	o.SizeInQuote = &v
}

// GetTotalFees returns the TotalFees field value if set, zero value otherwise.
func (o *Order) GetTotalFees() float64 {
	if o == nil || isNil(o.TotalFees) {
		var ret float64
		return ret
	}
	return *o.TotalFees
}

// GetTotalFeesOk returns a tuple with the TotalFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalFeesOk() (*float64, bool) {
	if o == nil || isNil(o.TotalFees) {
    return nil, false
	}
	return o.TotalFees, true
}

// HasTotalFees returns a boolean if a field has been set.
func (o *Order) HasTotalFees() bool {
	if o != nil && !isNil(o.TotalFees) {
		return true
	}

	return false
}

// SetTotalFees gets a reference to the given float64 and assigns it to the TotalFees field.
func (o *Order) SetTotalFees(v float64) {
	o.TotalFees = &v
}

// GetSizeInclusiveOfFees returns the SizeInclusiveOfFees field value if set, zero value otherwise.
func (o *Order) GetSizeInclusiveOfFees() bool {
	if o == nil || isNil(o.SizeInclusiveOfFees) {
		var ret bool
		return ret
	}
	return *o.SizeInclusiveOfFees
}

// GetSizeInclusiveOfFeesOk returns a tuple with the SizeInclusiveOfFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSizeInclusiveOfFeesOk() (*bool, bool) {
	if o == nil || isNil(o.SizeInclusiveOfFees) {
    return nil, false
	}
	return o.SizeInclusiveOfFees, true
}

// HasSizeInclusiveOfFees returns a boolean if a field has been set.
func (o *Order) HasSizeInclusiveOfFees() bool {
	if o != nil && !isNil(o.SizeInclusiveOfFees) {
		return true
	}

	return false
}

// SetSizeInclusiveOfFees gets a reference to the given bool and assigns it to the SizeInclusiveOfFees field.
func (o *Order) SetSizeInclusiveOfFees(v bool) {
	o.SizeInclusiveOfFees = &v
}

// GetTotalValueAfterFees returns the TotalValueAfterFees field value if set, zero value otherwise.
func (o *Order) GetTotalValueAfterFees() float64 {
	if o == nil || isNil(o.TotalValueAfterFees) {
		var ret float64
		return ret
	}
	return *o.TotalValueAfterFees
}

// GetTotalValueAfterFeesOk returns a tuple with the TotalValueAfterFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalValueAfterFeesOk() (*float64, bool) {
	if o == nil || isNil(o.TotalValueAfterFees) {
    return nil, false
	}
	return o.TotalValueAfterFees, true
}

// HasTotalValueAfterFees returns a boolean if a field has been set.
func (o *Order) HasTotalValueAfterFees() bool {
	if o != nil && !isNil(o.TotalValueAfterFees) {
		return true
	}

	return false
}

// SetTotalValueAfterFees gets a reference to the given float64 and assigns it to the TotalValueAfterFees field.
func (o *Order) SetTotalValueAfterFees(v float64) {
	o.TotalValueAfterFees = &v
}

// GetTriggerStatus returns the TriggerStatus field value if set, zero value otherwise.
func (o *Order) GetTriggerStatus() string {
	if o == nil || isNil(o.TriggerStatus) {
		var ret string
		return ret
	}
	return *o.TriggerStatus
}

// GetTriggerStatusOk returns a tuple with the TriggerStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTriggerStatusOk() (*string, bool) {
	if o == nil || isNil(o.TriggerStatus) {
    return nil, false
	}
	return o.TriggerStatus, true
}

// HasTriggerStatus returns a boolean if a field has been set.
func (o *Order) HasTriggerStatus() bool {
	if o != nil && !isNil(o.TriggerStatus) {
		return true
	}

	return false
}

// SetTriggerStatus gets a reference to the given string and assigns it to the TriggerStatus field.
func (o *Order) SetTriggerStatus(v string) {
	o.TriggerStatus = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *Order) GetOrderType() string {
	if o == nil || isNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderTypeOk() (*string, bool) {
	if o == nil || isNil(o.OrderType) {
    return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *Order) HasOrderType() bool {
	if o != nil && !isNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *Order) SetOrderType(v string) {
	o.OrderType = &v
}

// GetRejectReason returns the RejectReason field value if set, zero value otherwise.
func (o *Order) GetRejectReason() string {
	if o == nil || isNil(o.RejectReason) {
		var ret string
		return ret
	}
	return *o.RejectReason
}

// GetRejectReasonOk returns a tuple with the RejectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetRejectReasonOk() (*string, bool) {
	if o == nil || isNil(o.RejectReason) {
    return nil, false
	}
	return o.RejectReason, true
}

// HasRejectReason returns a boolean if a field has been set.
func (o *Order) HasRejectReason() bool {
	if o != nil && !isNil(o.RejectReason) {
		return true
	}

	return false
}

// SetRejectReason gets a reference to the given string and assigns it to the RejectReason field.
func (o *Order) SetRejectReason(v string) {
	o.RejectReason = &v
}

// GetSettled returns the Settled field value if set, zero value otherwise.
func (o *Order) GetSettled() bool {
	if o == nil || isNil(o.Settled) {
		var ret bool
		return ret
	}
	return *o.Settled
}

// GetSettledOk returns a tuple with the Settled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetSettledOk() (*bool, bool) {
	if o == nil || isNil(o.Settled) {
    return nil, false
	}
	return o.Settled, true
}

// HasSettled returns a boolean if a field has been set.
func (o *Order) HasSettled() bool {
	if o != nil && !isNil(o.Settled) {
		return true
	}

	return false
}

// SetSettled gets a reference to the given bool and assigns it to the Settled field.
func (o *Order) SetSettled(v bool) {
	o.Settled = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *Order) GetProductType() string {
	if o == nil || isNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetProductTypeOk() (*string, bool) {
	if o == nil || isNil(o.ProductType) {
    return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *Order) HasProductType() bool {
	if o != nil && !isNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *Order) SetProductType(v string) {
	o.ProductType = &v
}

// GetRejectMessage returns the RejectMessage field value if set, zero value otherwise.
func (o *Order) GetRejectMessage() string {
	if o == nil || isNil(o.RejectMessage) {
		var ret string
		return ret
	}
	return *o.RejectMessage
}

// GetRejectMessageOk returns a tuple with the RejectMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetRejectMessageOk() (*string, bool) {
	if o == nil || isNil(o.RejectMessage) {
    return nil, false
	}
	return o.RejectMessage, true
}

// HasRejectMessage returns a boolean if a field has been set.
func (o *Order) HasRejectMessage() bool {
	if o != nil && !isNil(o.RejectMessage) {
		return true
	}

	return false
}

// SetRejectMessage gets a reference to the given string and assigns it to the RejectMessage field.
func (o *Order) SetRejectMessage(v string) {
	o.RejectMessage = &v
}

// GetCancelMessage returns the CancelMessage field value if set, zero value otherwise.
func (o *Order) GetCancelMessage() string {
	if o == nil || isNil(o.CancelMessage) {
		var ret string
		return ret
	}
	return *o.CancelMessage
}

// GetCancelMessageOk returns a tuple with the CancelMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCancelMessageOk() (*string, bool) {
	if o == nil || isNil(o.CancelMessage) {
    return nil, false
	}
	return o.CancelMessage, true
}

// HasCancelMessage returns a boolean if a field has been set.
func (o *Order) HasCancelMessage() bool {
	if o != nil && !isNil(o.CancelMessage) {
		return true
	}

	return false
}

// SetCancelMessage gets a reference to the given string and assigns it to the CancelMessage field.
func (o *Order) SetCancelMessage(v string) {
	o.CancelMessage = &v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !isNil(o.OrderConfiguration) {
		toSerialize["order_configuration"] = o.OrderConfiguration
	}
	if !isNil(o.LimitLimitGtc) {
		toSerialize["limit_limit_gtc"] = o.LimitLimitGtc
	}
	if !isNil(o.LimitLimitGtd) {
		toSerialize["limit_limit_gtd"] = o.LimitLimitGtd
	}
	if !isNil(o.StopLimitStopLimitGtc) {
		toSerialize["stop_limit_stop_limit_gtc"] = o.StopLimitStopLimitGtc
	}
	if !isNil(o.StopLimitStopLimitGtd) {
		toSerialize["stop_limit_stop_limit_gtd"] = o.StopLimitStopLimitGtd
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !isNil(o.ClientOrderId) {
		toSerialize["client_order_id"] = o.ClientOrderId
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.TimeInForce) {
		toSerialize["time_in_force"] = o.TimeInForce
	}
	if !isNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !isNil(o.CompletionPercentage) {
		toSerialize["completion_percentage"] = o.CompletionPercentage
	}
	if !isNil(o.FilledSize) {
		toSerialize["filled_size"] = o.FilledSize
	}
	if !isNil(o.AverageFilledPrice) {
		toSerialize["average_filled_price"] = o.AverageFilledPrice
	}
	if !isNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !isNil(o.NumberOfFills) {
		toSerialize["number_of_fills"] = o.NumberOfFills
	}
	if !isNil(o.FilledValue) {
		toSerialize["filled_value"] = o.FilledValue
	}
	if !isNil(o.PendingCancel) {
		toSerialize["pending_cancel"] = o.PendingCancel
	}
	if !isNil(o.SizeInQuote) {
		toSerialize["size_in_quote"] = o.SizeInQuote
	}
	if !isNil(o.TotalFees) {
		toSerialize["total_fees"] = o.TotalFees
	}
	if !isNil(o.SizeInclusiveOfFees) {
		toSerialize["size_inclusive_of_fees"] = o.SizeInclusiveOfFees
	}
	if !isNil(o.TotalValueAfterFees) {
		toSerialize["total_value_after_fees"] = o.TotalValueAfterFees
	}
	if !isNil(o.TriggerStatus) {
		toSerialize["trigger_status"] = o.TriggerStatus
	}
	if !isNil(o.OrderType) {
		toSerialize["order_type"] = o.OrderType
	}
	if !isNil(o.RejectReason) {
		toSerialize["reject_reason"] = o.RejectReason
	}
	if !isNil(o.Settled) {
		toSerialize["settled"] = o.Settled
	}
	if !isNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !isNil(o.RejectMessage) {
		toSerialize["reject_message"] = o.RejectMessage
	}
	if !isNil(o.CancelMessage) {
		toSerialize["cancel_message"] = o.CancelMessage
	}
	return json.Marshal(toSerialize)
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


