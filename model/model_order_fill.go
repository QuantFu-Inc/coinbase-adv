/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// OrderFill struct for OrderFill
type OrderFill struct {
	EntryId *string `json:"entry_id,omitempty"`
	TradeId *string `json:"trade_id,omitempty"`
	OrderId *string `json:"order_id,omitempty"`
	TradeTime *string `json:"trade_time,omitempty"`
	TradeType *string `json:"trade_type,omitempty"`
	Price *float64 `json:"price,omitempty,string"`
	Size *float64 `json:"size,omitempty,string"`
	Commission *float64 `json:"commission,omitempty,string"`
	SequenceTimestamp *string `json:"sequence_timestamp,omitempty"`
	LiquidityIndicator *string `json:"liquidity_indicator,omitempty"`
	SizeInQuote *bool `json:"size_in_quote,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	Side *string `json:"side,omitempty"`
}

// NewOrderFill instantiates a new OrderFill object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderFill() *OrderFill {
	this := OrderFill{}
	return &this
}

// NewOrderFillWithDefaults instantiates a new OrderFill object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderFillWithDefaults() *OrderFill {
	this := OrderFill{}
	return &this
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *OrderFill) GetEntryId() string {
	if o == nil || isNil(o.EntryId) {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetEntryIdOk() (*string, bool) {
	if o == nil || isNil(o.EntryId) {
    return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *OrderFill) HasEntryId() bool {
	if o != nil && !isNil(o.EntryId) {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *OrderFill) SetEntryId(v string) {
	o.EntryId = &v
}

// GetTradeId returns the TradeId field value if set, zero value otherwise.
func (o *OrderFill) GetTradeId() string {
	if o == nil || isNil(o.TradeId) {
		var ret string
		return ret
	}
	return *o.TradeId
}

// GetTradeIdOk returns a tuple with the TradeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetTradeIdOk() (*string, bool) {
	if o == nil || isNil(o.TradeId) {
    return nil, false
	}
	return o.TradeId, true
}

// HasTradeId returns a boolean if a field has been set.
func (o *OrderFill) HasTradeId() bool {
	if o != nil && !isNil(o.TradeId) {
		return true
	}

	return false
}

// SetTradeId gets a reference to the given string and assigns it to the TradeId field.
func (o *OrderFill) SetTradeId(v string) {
	o.TradeId = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderFill) GetOrderId() string {
	if o == nil || isNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.OrderId) {
    return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderFill) HasOrderId() bool {
	if o != nil && !isNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderFill) SetOrderId(v string) {
	o.OrderId = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *OrderFill) GetTradeTime() string {
	if o == nil || isNil(o.TradeTime) {
		var ret string
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetTradeTimeOk() (*string, bool) {
	if o == nil || isNil(o.TradeTime) {
    return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *OrderFill) HasTradeTime() bool {
	if o != nil && !isNil(o.TradeTime) {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given string and assigns it to the TradeTime field.
func (o *OrderFill) SetTradeTime(v string) {
	o.TradeTime = &v
}

// GetTradeType returns the TradeType field value if set, zero value otherwise.
func (o *OrderFill) GetTradeType() string {
	if o == nil || isNil(o.TradeType) {
		var ret string
		return ret
	}
	return *o.TradeType
}

// GetTradeTypeOk returns a tuple with the TradeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetTradeTypeOk() (*string, bool) {
	if o == nil || isNil(o.TradeType) {
    return nil, false
	}
	return o.TradeType, true
}

// HasTradeType returns a boolean if a field has been set.
func (o *OrderFill) HasTradeType() bool {
	if o != nil && !isNil(o.TradeType) {
		return true
	}

	return false
}

// SetTradeType gets a reference to the given string and assigns it to the TradeType field.
func (o *OrderFill) SetTradeType(v string) {
	o.TradeType = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderFill) GetPrice() float64 {
	if o == nil || isNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetPriceOk() (*float64, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderFill) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *OrderFill) SetPrice(v float64) {
	o.Price = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *OrderFill) GetSize() float64 {
	if o == nil || isNil(o.Size) {
		var ret float64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetSizeOk() (*float64, bool) {
	if o == nil || isNil(o.Size) {
    return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *OrderFill) HasSize() bool {
	if o != nil && !isNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given float64 and assigns it to the Size field.
func (o *OrderFill) SetSize(v float64) {
	o.Size = &v
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *OrderFill) GetCommission() float64 {
	if o == nil || isNil(o.Commission) {
		var ret float64
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetCommissionOk() (*float64, bool) {
	if o == nil || isNil(o.Commission) {
    return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *OrderFill) HasCommission() bool {
	if o != nil && !isNil(o.Commission) {
		return true
	}

	return false
}

// SetCommission gets a reference to the given float64 and assigns it to the Commission field.
func (o *OrderFill) SetCommission(v float64) {
	o.Commission = &v
}

// GetSequenceTimestamp returns the SequenceTimestamp field value if set, zero value otherwise.
func (o *OrderFill) GetSequenceTimestamp() string {
	if o == nil || isNil(o.SequenceTimestamp) {
		var ret string
		return ret
	}
	return *o.SequenceTimestamp
}

// GetSequenceTimestampOk returns a tuple with the SequenceTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetSequenceTimestampOk() (*string, bool) {
	if o == nil || isNil(o.SequenceTimestamp) {
    return nil, false
	}
	return o.SequenceTimestamp, true
}

// HasSequenceTimestamp returns a boolean if a field has been set.
func (o *OrderFill) HasSequenceTimestamp() bool {
	if o != nil && !isNil(o.SequenceTimestamp) {
		return true
	}

	return false
}

// SetSequenceTimestamp gets a reference to the given string and assigns it to the SequenceTimestamp field.
func (o *OrderFill) SetSequenceTimestamp(v string) {
	o.SequenceTimestamp = &v
}

// GetLiquidityIndicator returns the LiquidityIndicator field value if set, zero value otherwise.
func (o *OrderFill) GetLiquidityIndicator() string {
	if o == nil || isNil(o.LiquidityIndicator) {
		var ret string
		return ret
	}
	return *o.LiquidityIndicator
}

// GetLiquidityIndicatorOk returns a tuple with the LiquidityIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetLiquidityIndicatorOk() (*string, bool) {
	if o == nil || isNil(o.LiquidityIndicator) {
    return nil, false
	}
	return o.LiquidityIndicator, true
}

// HasLiquidityIndicator returns a boolean if a field has been set.
func (o *OrderFill) HasLiquidityIndicator() bool {
	if o != nil && !isNil(o.LiquidityIndicator) {
		return true
	}

	return false
}

// SetLiquidityIndicator gets a reference to the given string and assigns it to the LiquidityIndicator field.
func (o *OrderFill) SetLiquidityIndicator(v string) {
	o.LiquidityIndicator = &v
}

// GetSizeInQuote returns the SizeInQuote field value if set, zero value otherwise.
func (o *OrderFill) GetSizeInQuote() bool {
	if o == nil || isNil(o.SizeInQuote) {
		var ret bool
		return ret
	}
	return *o.SizeInQuote
}

// GetSizeInQuoteOk returns a tuple with the SizeInQuote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetSizeInQuoteOk() (*bool, bool) {
	if o == nil || isNil(o.SizeInQuote) {
    return nil, false
	}
	return o.SizeInQuote, true
}

// HasSizeInQuote returns a boolean if a field has been set.
func (o *OrderFill) HasSizeInQuote() bool {
	if o != nil && !isNil(o.SizeInQuote) {
		return true
	}

	return false
}

// SetSizeInQuote gets a reference to the given bool and assigns it to the SizeInQuote field.
func (o *OrderFill) SetSizeInQuote(v bool) {
	o.SizeInQuote = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *OrderFill) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *OrderFill) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *OrderFill) SetProductId(v string) {
	o.ProductId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *OrderFill) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
    return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *OrderFill) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *OrderFill) SetUserId(v string) {
	o.UserId = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *OrderFill) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFill) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *OrderFill) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *OrderFill) SetSide(v string) {
	o.Side = &v
}

func (o OrderFill) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EntryId) {
		toSerialize["entry_id"] = o.EntryId
	}
	if !isNil(o.TradeId) {
		toSerialize["trade_id"] = o.TradeId
	}
	if !isNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !isNil(o.TradeTime) {
		toSerialize["trade_time"] = o.TradeTime
	}
	if !isNil(o.TradeType) {
		toSerialize["trade_type"] = o.TradeType
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !isNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !isNil(o.Commission) {
		toSerialize["commission"] = o.Commission
	}
	if !isNil(o.SequenceTimestamp) {
		toSerialize["sequence_timestamp"] = o.SequenceTimestamp
	}
	if !isNil(o.LiquidityIndicator) {
		toSerialize["liquidity_indicator"] = o.LiquidityIndicator
	}
	if !isNil(o.SizeInQuote) {
		toSerialize["size_in_quote"] = o.SizeInQuote
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	return json.Marshal(toSerialize)
}

type NullableOrderFill struct {
	value *OrderFill
	isSet bool
}

func (v NullableOrderFill) Get() *OrderFill {
	return v.value
}

func (v *NullableOrderFill) Set(val *OrderFill) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderFill) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderFill) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderFill(val *OrderFill) *NullableOrderFill {
	return &NullableOrderFill{value: val, isSet: true}
}

func (v NullableOrderFill) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderFill) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


