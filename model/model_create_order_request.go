/*
Coinbase Advanced Trading API

OpenAPI 3.x specification for Coinbase Adavanced Trading

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
)

// CreateOrderRequest struct for CreateOrderRequest
type CreateOrderRequest struct {
	ClientOrderId *string `json:"client_order_id,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	Side *string `json:"side,omitempty"`
	OrderConfiguration *CreateOrderRequestOrderConfiguration `json:"order_configuration,omitempty"`
}

// NewCreateOrderRequest instantiates a new CreateOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrderRequest() *CreateOrderRequest {
	this := CreateOrderRequest{}
	return &this
}

// NewCreateOrderRequestWithDefaults instantiates a new CreateOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrderRequestWithDefaults() *CreateOrderRequest {
	this := CreateOrderRequest{}
	return &this
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetClientOrderId() string {
	if o == nil || isNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetClientOrderIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientOrderId) {
    return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasClientOrderId() bool {
	if o != nil && !isNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *CreateOrderRequest) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *CreateOrderRequest) SetProductId(v string) {
	o.ProductId = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetSide() string {
	if o == nil || isNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetSideOk() (*string, bool) {
	if o == nil || isNil(o.Side) {
    return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasSide() bool {
	if o != nil && !isNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *CreateOrderRequest) SetSide(v string) {
	o.Side = &v
}

// GetOrderConfiguration returns the OrderConfiguration field value if set, zero value otherwise.
func (o *CreateOrderRequest) GetOrderConfiguration() CreateOrderRequestOrderConfiguration {
	if o == nil || isNil(o.OrderConfiguration) {
		var ret CreateOrderRequestOrderConfiguration
		return ret
	}
	return *o.OrderConfiguration
}

// GetOrderConfigurationOk returns a tuple with the OrderConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrderRequest) GetOrderConfigurationOk() (*CreateOrderRequestOrderConfiguration, bool) {
	if o == nil || isNil(o.OrderConfiguration) {
    return nil, false
	}
	return o.OrderConfiguration, true
}

// HasOrderConfiguration returns a boolean if a field has been set.
func (o *CreateOrderRequest) HasOrderConfiguration() bool {
	if o != nil && !isNil(o.OrderConfiguration) {
		return true
	}

	return false
}

// SetOrderConfiguration gets a reference to the given CreateOrderRequestOrderConfiguration and assigns it to the OrderConfiguration field.
func (o *CreateOrderRequest) SetOrderConfiguration(v CreateOrderRequestOrderConfiguration) {
	o.OrderConfiguration = &v
}

func (o CreateOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClientOrderId) {
		toSerialize["client_order_id"] = o.ClientOrderId
	}
	if !isNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !isNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !isNil(o.OrderConfiguration) {
		toSerialize["order_configuration"] = o.OrderConfiguration
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrderRequest struct {
	value *CreateOrderRequest
	isSet bool
}

func (v NullableCreateOrderRequest) Get() *CreateOrderRequest {
	return v.value
}

func (v *NullableCreateOrderRequest) Set(val *CreateOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrderRequest(val *CreateOrderRequest) *NullableCreateOrderRequest {
	return &NullableCreateOrderRequest{value: val, isSet: true}
}

func (v NullableCreateOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


